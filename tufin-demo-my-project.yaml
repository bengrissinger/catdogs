# Policy generated by Tufin Orca
# Domain: tufin-demo
# Project: my-project
# 
# Notes:
#
# 1. To apply the policies run:
# kubectl apply -f tufin-demo-my-project.yaml
#
# 2. Namespaces should have unique labels
# The auto-generated policies rely on namespace labels to allow inter-namespace access.
# Run the following command to add labels to all namespaces:                                    
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl label namespace $ns namespace=$ns --overwrite; done
#
# 3. Egress access to domain names (FQDN)
# Kubernetes network policies don't support domain names like www.aws.com
# Instead, auto-generated policies contain the IP addresses that were monitored in rules with domain names.
# Domains that are not associated with IP addresses, for example when using wildcards (e.g., *.aws.com), are represented as 0.0.0.0/0.
#
# 4. To delete Tufin Orca policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol -l tufin-owner=tufin-orca -l tufin-mode=auto-generated --namespace=$ns; done
#
# 5. To delete ALL network policies run:
# for ns in $(kubectl get namespaces --output=jsonpath={.items..metadata.name}); do kubectl delete netpol --all --namespace=$ns; done
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes.redis
    namespace: votes
spec:
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: vote
      - from:
          - podSelector:
                matchLabels:
                    app: worker
    podSelector:
        matchLabels:
            app: redis
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes.result
    namespace: votes
spec:
    egress:
      - to:
          - podSelector:
                matchLabels:
                    app: db
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: db
    podSelector:
        matchLabels:
            app: result
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes.db
    namespace: votes
spec:
    egress:
      - to:
          - podSelector:
                matchLabels:
                    app: result
      - to:
          - podSelector:
                matchLabels:
                    app: worker
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: result
      - from:
          - podSelector:
                matchLabels:
                    app: worker
    podSelector:
        matchLabels:
            app: db
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes.worker
    namespace: votes
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
      - to:
          - podSelector:
                matchLabels:
                    app: redis
      - to:
          - podSelector:
                matchLabels:
                    app: db
    ingress:
      - from:
          - podSelector:
                matchLabels:
                    app: db
    podSelector:
        matchLabels:
            app: worker
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: tufin-system.kite
    namespace: tufin-system
spec:
    egress:
      - to:
          - ipBlock:
                cidr: 0.0.0.0/0 # *.tufin.io
    podSelector:
        matchLabels:
            app: kite
    policyTypes:
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes.vote
    namespace: votes
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
      - to:
          - podSelector:
                matchLabels:
                    app: redis
    podSelector:
        matchLabels:
            app: vote
    policyTypes:
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-system.kube-dns
    namespace: kube-system
spec:
    ingress:
      - from:
          - namespaceSelector: {}
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: votes # missing label - see note 2 above
            podSelector:
                matchLabels:
                    app: result
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: votes # missing label - see note 2 above
            podSelector:
                matchLabels:
                    app: vote
      - from:
          - namespaceSelector:
                matchLabels:
                    namespace: votes # missing label - see note 2 above
            podSelector:
                matchLabels:
                    app: worker
    podSelector:
        matchLabels:
            k8s-app: kube-dns
    policyTypes:
      - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: tufin-system
    namespace: tufin-system
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: votes
    namespace: votes
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: default
    namespace: default
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: docker
    namespace: docker
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-node-lease
    namespace: kube-node-lease
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-public
    namespace: kube-public
spec:
    egress:
      - to:
          - namespaceSelector:
                matchLabels:
                    namespace: kube-system # missing label - see note 2 above
            podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    creationTimestamp: "2020-01-30T10:48:45Z"
    labels:
        tufin-mode: auto-generated
        tufin-owner: tufin-orca
    name: kube-system
    namespace: kube-system
spec:
    egress:
      - to:
          - podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
